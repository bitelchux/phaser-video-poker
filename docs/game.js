!function(e){function t(t){for(var n,a,s=t[0],u=t[1],l=t[2],f=0,h=[];f<s.length;f++)a=s[f],o[a]&&h.push(o[a][0]),o[a]=0;for(n in u)Object.prototype.hasOwnProperty.call(u,n)&&(e[n]=u[n]);for(c&&c(t);h.length;)h.shift()();return i.push.apply(i,l||[]),r()}function r(){for(var e,t=0;t<i.length;t++){for(var r=i[t],n=!0,s=1;s<r.length;s++){var u=r[s];0!==o[u]&&(n=!1)}n&&(i.splice(t--,1),e=a(a.s=r[0]))}return e}var n={},o={0:0},i=[];function a(t){if(n[t])return n[t].exports;var r=n[t]={i:t,l:!1,exports:{}};return e[t].call(r.exports,r,r.exports,a),r.l=!0,r.exports}a.m=e,a.c=n,a.d=function(e,t,r){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,t){if(1&t&&(e=a(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(a.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)a.d(r,n,function(t){return e[t]}.bind(null,n));return r},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="";var s=this.webpackJsonp=this.webpackJsonp||[],u=s.push.bind(s);s.push=t,s=s.slice();for(var l=0;l<s.length;l++)t(s[l]);var c=u;i.push([0,1]),r()}([function(e,t,r){e.exports=r(7)},,,,,function(e,t,r){},,function(e,t,r){"use strict";r.r(t);r(1),r(4),r(5);function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function i(e){return(i=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function a(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function s(e,t){return(s=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var u=function(e){function t(e,r){var o,s,u;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),s=this,o=!(u=i(t).call(this,e))||"object"!==n(u)&&"function"!=typeof u?a(s):u,function(e,t,r){t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r}(a(o),"game",void 0),o}var r,u,l;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&s(e,t)}(t,Phaser.Scene),r=t,(u=[{key:"preload",value:function(){}},{key:"setTimerEvent",value:function(e,t,r,n){return this.time.delayedCall(Phaser.Math.Between(e,t),r,n||[],this)}}])&&o(r.prototype,u),l&&o(r,l),t}(),l={GRAY:new Phaser.Display.Color(127,127,127),UI_BLUE:new Phaser.Display.Color(127,127,255),WHITE:new Phaser.Display.Color(255,255,255),YELLOW_TEXT:new Phaser.Display.Color(255,255,200),BLACK:new Phaser.Display.Color(0,0,0),RED:new Phaser.Display.Color(255,0,0),BUTTON_GREEN:new Phaser.Display.Color(63,175,63),BUTTON_ORANGE:new Phaser.Display.Color(127,64,0),BUTTON_YELLOW:new Phaser.Display.Color(144,144,33),BUTTON_RED:new Phaser.Display.Color(127,33,33),BUTTON_BLUE:new Phaser.Display.Color(63,63,157),COIN_YELLOW:new Phaser.Display.Color(255,255,127),BACKGROUND:new Phaser.Display.Color(33,33,33),CARD_COLOR:new Phaser.Display.Color(233,233,200),HOLD_LABEL:new Phaser.Display.Color(255,200,200)};function c(e){return(c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function f(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function h(e){return(h=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function d(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function p(e,t){return(p=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function y(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var b=function(e){function t(e,r,n,o){var i,a,s;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),a=this,i=!(s=h(t).call(this,e,r,n,"cardback"))||"object"!==c(s)&&"function"!=typeof s?d(a):s,y(d(i),"rt",void 0),y(d(i),"faceUp",void 0),y(d(i),"card",void 0),i.card=o,i.faceUp=!1,i.scene.add.existing(d(i)),i}var r,n,o;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&p(e,t)}(t,Phaser.GameObjects.Sprite),r=t,(n=[{key:"flipCard",value:function(e){return this.faceUp=e,this.setTexture(e?this.card.textureKey:"cardback"),this}},{key:"setCard",value:function(e){return e&&(this.card=e,this.faceUp&&this.setTexture(this.card.textureKey)),this}},{key:"discard",value:function(){this.destroy()}}])&&f(r.prototype,n),o&&f(r,o),t}();function v(e){return(v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function m(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function g(e){return(g=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function O(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function w(e,t){return(w=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var k=function(e){function t(e,r){var n,o,i;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),o=this,n=!(i=g(t).call(this,"BootScene"))||"object"!==v(i)&&"function"!=typeof i?O(o):i,function(e,t,r){t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r}(O(n),"rt",void 0),n}var r,n,o;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&w(e,t)}(t,u),r=t,(n=[{key:"preload",value:function(){this.load.atlas("suits","assets/suits.png","assets/suits.json"),this.load.atlas("suits8","assets/suits-8.png","assets/suits-8.json"),this.load.image("cardback-graphic","assets/cardback.png"),this.load.image("joker","assets/joker.png"),this.load.bitmapFont("arcade","assets/fonts/arcade.png","assets/fonts/arcade.xml")}},{key:"create",value:function(){console.info("BootScene - create()"),this.createTexture(),this.scene.start("GameScene",{})}},{key:"createTexture",value:function(){this.rt=this.add.renderTexture(-100,-10,48,64);var e=this.add.graphics().fillStyle(l.CARD_COLOR.color,1).lineStyle(2,l.WHITE.color,1).fillRoundedRect(0,0,48,64,2).strokeRoundedRect(0,0,48,64,2),t=this.add.image(24,32,"cardback-graphic").setOrigin(.5).setScale(2);this.rt.draw(e).draw(t).saveTexture("cardback"),t.destroy(),e.destroy()}}])&&m(r.prototype,n),o&&m(r,o),t}(),_={type:Phaser.AUTO,scale:{parent:"game-container",mode:Phaser.Scale.FIT,autoCenter:Phaser.Scale.CENTER_BOTH,width:320,height:240},render:{pixelArt:!0,roundPixels:!0},plugins:{global:[]}},T={bets:[.2,.4,.6,.8,1],jokers:1,hands:[{key:"fiveOfAKind",multiplier:100,name:"5 of a Kind"},{key:"royalFlush",multiplier:100,name:"Royal Flush"},{key:"straightFlush",multiplier:50,name:"Straight Flush"},{key:"fourOfAKind",multiplier:30,name:"4 of a Kind"},{key:"fullHouse",multiplier:13,name:"Full House"},{key:"flush",multiplier:7,name:"Flush"},{key:"straight",multiplier:6,name:"Straight"},{key:"threeOfAKind",multiplier:3,name:"3 of a Kind"}]};function S(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function E(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var P=function(){function e(t,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),E(this,"textureKey",void 0),E(this,"suit",void 0),E(this,"rank",void 0),this.suit=t,this.rank=r,this.textureKey="card_".concat(t,"_").concat(r.symbol)}var t,r,n;return t=e,(r=[{key:"toString",value:function(){return"[Card ".concat(this.rank.symbol," of ").concat(this.suit,"]")}},{key:"isJoker",get:function(){return"joker"===this.suit}},{key:"isBlack",get:function(){return this.isJoker||"club"===this.suit||"spade"===this.suit}},{key:"isBig",get:function(){return this.isJoker||this.rank.value>7&&this.rank.value<14}},{key:"isSmall",get:function(){return this.isJoker||this.rank.value>0&&this.rank.value<7}}])&&S(t.prototype,r),n&&S(t,n),e}(),j=[{value:1,symbol:"A"},{value:2,symbol:"2"},{value:3,symbol:"3"},{value:4,symbol:"4"},{value:5,symbol:"5"},{value:6,symbol:"6"},{value:7,symbol:"7"},{value:8,symbol:"8"},{value:9,symbol:"9"},{value:10,symbol:"10"},{value:11,symbol:"J"},{value:12,symbol:"Q"},{value:13,symbol:"K"}];function C(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function x(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var L=function(){function e(){var t=this,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),x(this,"cards",[]),x(this,"rt",void 0),x(this,"usedCards",[]),x(this,"lastDrawnIndex",0);for(var n=0;n<r;n++)this.cards.push(new P("joker",{value:99,symbol:"J"}));["club","diamond","heart","spade"].forEach(function(e){var r=!0,n=!1,o=void 0;try{for(var i,a=j[Symbol.iterator]();!(r=(i=a.next()).done);r=!0){var s=i.value;t.cards.push(new P(e,s))}}catch(e){n=!0,o=e}finally{try{r||null==a.return||a.return()}finally{if(n)throw o}}})}var t,r,n;return t=e,(r=[{key:"shuffle",value:function(){for(var e,t,r=this.cards.length;0!==r;)t=Math.floor(Math.random()*r),r-=1,e=this.cards[r],this.cards[r]=this.cards[t],this.cards[t]=e;this.usedCards=[],this.lastDrawnIndex=0}},{key:"draw",value:function(){!(arguments.length>0&&void 0!==arguments[0])||arguments[0];if(this.lastDrawnIndex===this.cards.length)return console.warn("tried to draw too many cards, shuffle the deck"),null;var e=this.cards[this.lastDrawnIndex++];return this.usedCards.push(e),e}},{key:"drawSpecific",value:function(e,t){var r=this.cards.filter(function(r){return t?r.suit===e&&r.rank.value===t:r.suit===e});return r.length?r[0]:null}}])&&C(t.prototype,r),n&&C(t,n),e}();function R(e){return(R="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function D(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function B(e){return(B=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function G(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function U(e,t){return(U=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function N(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var A=function(e){function t(e){var r,n,o;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),n=this,r=!(o=B(t).call(this))||"object"!==R(o)&&"function"!=typeof o?G(n):o,N(G(r),"deck",void 0),N(G(r),"settings",void 0),N(G(r),"gameState",void 0),r.gameState={state:"none",balance:0,bet:.2},r.settings=e,r.deck=new L(r.settings.jokers),r.bindEvents(),r.emit("game:ready"),r}var r,n,o;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&U(e,t)}(t,Phaser.Events.EventEmitter),r=t,(n=[{key:"checkHand",value:function(e){return null}},{key:"dealNewHand",value:function(){this.emit("deal:initial",[]),this.changeState("select")}},{key:"dealChange",value:function(){this.emit("deal:change",[])}},{key:"changeState",value:function(e){var t=this.gameState.state;this.gameState.state=e,this.emit("statechange",e,t)}},{key:"bindEvents",value:function(){}}])&&D(r.prototype,n),o&&D(r,o),t}();function I(e){return(I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function H(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function K(e){return(K=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function M(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function W(e,t){return(W=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function J(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var F=function(e){function t(e,r,n,o,i){var a,s,u,l=arguments.length>5&&void 0!==arguments[5]?arguments[5]:44,c=arguments.length>6&&void 0!==arguments[6]?arguments[6]:16;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),s=this,u=K(t).call(this,e,r,n),a=!u||"object"!==I(u)&&"function"!=typeof u?M(s):u,J(M(a),"events",new Phaser.Events.EventEmitter),J(M(a),"button",void 0),J(M(a),"bitmapText",void 0),J(M(a),"text",void 0),J(M(a),"buttonColor",void 0),J(M(a),"colorLit",void 0),J(M(a),"borderColor",void 0),J(M(a),"borderColorLit",void 0),J(M(a),"buttonWidth",void 0),J(M(a),"buttonHeight",void 0),J(M(a),"isLit",!1),a.text=i,a.buttonColor=o,a.colorLit=o.clone().lighten(20),a.borderColor=o.clone().darken(10),a.borderColorLit=o.clone(),a.buttonWidth=l,a.buttonHeight=c,a.createButton(),a.button.setInteractive({cursor:"pointer"}).on(Phaser.Input.Events.GAMEOBJECT_POINTER_OVER,function(){a.lit=!0},M(a)).on(Phaser.Input.Events.GAMEOBJECT_POINTER_OUT,function(){a.lit=!1}),e.add.existing(M(a)),a}var r,n,o;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&W(e,t)}(t,Phaser.GameObjects.Container),r=t,(n=[{key:"createButton",value:function(){this.button=this.scene.add.rectangle(0,0,this.buttonWidth,this.buttonHeight,this.buttonColor.color,1).setStrokeStyle(2,this.borderColor.color).setOrigin(0),this.bitmapText=this.scene.add.bitmapText(this.buttonWidth/2,this.buttonHeight/2,"arcade",this.text,8).setTint(0).setOrigin(.5),this.add([this.button,this.bitmapText])}},{key:"lit",get:function(){return this.isLit},set:function(e){this.isLit=e,this.button.setStrokeStyle(2,this.isLit?this.borderColorLit.color:this.borderColor.color).setFillStyle(this.isLit?this.colorLit.color:this.buttonColor.color)}}])&&H(r.prototype,n),o&&H(r,o),t}();function Y(e){return(Y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function z(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function Q(e){return(Q=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function V(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function X(e,t){return(X=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function q(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var Z=function(e){function t(e,r,n,o,i){var a,s,u;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),s=this,a=!(u=Q(t).call(this,e,r,n))||"object"!==Y(u)&&"function"!=typeof u?V(s):u,q(V(a),"bg",void 0),q(V(a),"label",void 0),a.createLabel(o,i),e.add.existing(V(a)),a}var r,n,o;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&X(e,t)}(t,Phaser.GameObjects.Container),r=t,(n=[{key:"createLabel",value:function(e,t){this.bg=this.scene.add.rectangle(0,0,40,16,e.color,1).setOrigin(0).setStrokeStyle(1,l.RED.color),this.label=this.scene.add.bitmapText(20,8,"arcade",t,8).setTint(0).setOrigin(.5),this.add(this.bg),this.add(this.label)}}])&&z(r.prototype,n),o&&z(r,o),t}();function $(e){return($="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function ee(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function te(e){return(te=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function re(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function ne(e,t){return(ne=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function oe(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var ie=function(e){function t(){var e,r,n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),r=this,e=!(n=te(t).call(this,"GameScene"))||"object"!==$(n)&&"function"!=typeof n?re(r):n,oe(re(e),"rts",void 0),oe(re(e),"gameSettings",void 0),oe(re(e),"pokerGame",void 0),oe(re(e),"backgroundGroup",void 0),oe(re(e),"winningsGroup",void 0),oe(re(e),"uiGroup",void 0),oe(re(e),"buttonsGroup",void 0),oe(re(e),"cardsGroup",void 0),e}var r,n,o;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&ne(e,t)}(t,u),r=t,(n=[{key:"create",value:function(e){console.info("GameScene - create()"),this.rts=[],this.gameSettings=T,this.pokerGame=new A(this.gameSettings),this.pokerGame.deck.shuffle(),this.createCardTextures(),this.createUI(),this.bindEvents()}},{key:"update",value:function(e,t){}},{key:"bindEvents",value:function(){}},{key:"createCardTextures",value:function(){var e=this;this.pokerGame.deck.cards.forEach(function(t,r){var n=e.add.renderTexture(-100,-10,48,64),o=e.add.graphics().fillStyle(l.CARD_COLOR.color,1).lineStyle(2,l.WHITE.color,1).fillRoundedRect(0,0,48,64,3).strokeRoundedRect(0,0,48,64,3);if(n.draw([o]),t.isJoker){var i=e.add.image(24,25,"joker").setOrigin(.5),a=e.add.bitmapText(24,52,"arcade","joker",8).setTint(l.UI_BLUE.color).setOrigin(.5);n.draw([o,i,a]),i.destroy(),a.destroy()}else{if(1===t.rank.value){var s=e.add.image(24,32,"suits",t.suit).setOrigin(.5);n.draw([s]),s.destroy()}else{var u=e.add.image(4,15,"suits8",t.suit).setOrigin(0),c=e.add.image(45,50,"suits8",t.suit).setOrigin(0).setRotation(Phaser.Math.DegToRad(180));n.draw([u,c]),u.destroy(),c.destroy()}var f=e.add.bitmapText(4,3,"arcade",t.rank.symbol,8).setOrigin(0).setTint(t.isBlack?l.BLACK.color:l.RED.color),h=e.add.bitmapText(45,61,"arcade",t.rank.symbol,8).setOrigin(0).setRotation(Phaser.Math.DegToRad(180)).setTint(t.isBlack?l.BLACK.color:l.RED.color);n.draw([f,h]),f.destroy(),h.destroy()}o.destroy(),n.saveTexture(t.textureKey),e.rts.push(n)})}},{key:"createUI",value:function(){this.uiGroup=this.add.group(),this.cardsGroup=this.add.group(),this.backgroundGroup=this.add.group(),this.buttonsGroup=this.add.group(),this.winningsGroup=this.add.group(),this.backgroundGroup.addMultiple([this.add.rectangle(0,0,this.scale.gameSize.width,this.scale.gameSize.height,l.BACKGROUND.color).setOrigin(0),this.add.rectangle(0,0,this.scale.gameSize.width,30,l.GRAY.color,1).setOrigin(0),this.add.rectangle(0,this.scale.gameSize.height-50,this.scale.gameSize.width,50,l.GRAY.color,1).setOrigin(0)]);var e=0,t=!0,r=!1,n=void 0;try{for(var o,i=this.gameSettings.hands[Symbol.iterator]();!(t=(o=i.next()).done);t=!0){var a=o.value;this.winningsGroup.addMultiple([this.add.bitmapText(135,34+9*e,"arcade","".concat(a.name).padEnd(17," "),8),this.add.bitmapText(270,34+9*e,"arcade","".concat(a.multiplier).padStart(3," "),8)]),e++}}catch(e){r=!0,n=e}finally{try{t||null==i.return||i.return()}finally{if(r)throw n}}this.uiGroup.addMultiple([this.add.rectangle(3,3,122,24,l.WHITE.color).setOrigin(0),this.add.rectangle(4,4,120,22,l.UI_BLUE.color).setOrigin(0),this.add.circle(182,10,12,l.COIN_YELLOW.clone().darken(20).color).setOrigin(0),this.add.circle(180,9,12,l.COIN_YELLOW.color).setOrigin(0),this.add.bitmapText(5,11,"arcade","money",8),this.add.bitmapText(150,10,"arcade","bet",8),this.add.bitmapText(122,6,"arcade","9999",16).setOrigin(1,0),this.add.bitmapText(180,6,"arcade","1",16).setTint(l.BLACK.color),new Z(this,35,170,l.HOLD_LABEL,"held").setDepth(100),new Z(this,90,170,l.HOLD_LABEL,"held").setDepth(100),new Z(this,145,170,l.HOLD_LABEL,"held").setDepth(100),new Z(this,200,170,l.HOLD_LABEL,"held").setDepth(100),new Z(this,255,170,l.HOLD_LABEL,"held").setDepth(100)]),this.cardsGroup.addMultiple([new b(this,40,70,new P("heart",{symbol:"2",value:2})),new b(this,45,78,new P("heart",{symbol:"2",value:2})),new b(this,55,65,new P("heart",{symbol:"2",value:2})),new b(this,55,150,this.pokerGame.deck.draw()).flipCard(!0),new b(this,110,150,this.pokerGame.deck.draw()).flipCard(!0),new b(this,165,150,this.pokerGame.deck.draw()).flipCard(!0),new b(this,220,150,this.pokerGame.deck.draw()).flipCard(!0),new b(this,275,150,this.pokerGame.deck.draw()).flipCard(!0)]),this.buttonsGroup.addMultiple([new F(this,35,195,l.BUTTON_RED,"hold"),new F(this,90,195,l.BUTTON_RED,"hold"),new F(this,145,195,l.BUTTON_RED,"hold"),new F(this,200,195,l.BUTTON_RED,"hold"),new F(this,255,195,l.BUTTON_RED,"hold"),new F(this,15,220,l.BUTTON_YELLOW,"pay"),new F(this,65,220,l.BUTTON_ORANGE,"dbl"),new F(this,115,220,l.BUTTON_ORANGE,"small"),new F(this,165,220,l.BUTTON_ORANGE,"large"),new F(this,215,220,l.BUTTON_BLUE,"bet"),new F(this,265,220,l.BUTTON_GREEN,"deal")])}}])&&ee(r.prototype,n),o&&ee(r,o),t}();function ae(e){return(ae="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function se(e){return(se=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function ue(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function le(e,t){return(le=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}r.d(t,"KokoGame",function(){return ce});var ce=function(e){function t(e){var r,n,o,i,a,s;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),n=this,r=!(o=se(t).call(this,e))||"object"!==ae(o)&&"function"!=typeof o?ue(n):o,i=ue(r),s=!1,(a="debug")in i?Object.defineProperty(i,a,{value:s,enumerable:!0,configurable:!0,writable:!0}):i[a]=s,r}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&le(e,t)}(t,Phaser.Game),t}();window.onload=function(){var e=new ce(_);if("production"!==window.env.buildType){var t=new(r(6));t.setMode(0),t.domElement.style.position="absolute",t.domElement.style.left="0px",t.domElement.style.top="0px",document.body.appendChild(t.domElement),e.events.on("prestep",function(){return t.begin()}),e.events.on("postrender",function(){return t.end()})}e.scene.add("BootScene",k,!0),e.scene.add("GameScene",ie,!1,T)}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,