!function(e){function t(t){for(var r,a,u=t[0],s=t[1],c=t[2],f=0,d=[];f<u.length;f++)a=u[f],o[a]&&d.push(o[a][0]),o[a]=0;for(r in s)Object.prototype.hasOwnProperty.call(s,r)&&(e[r]=s[r]);for(l&&l(t);d.length;)d.shift()();return i.push.apply(i,c||[]),n()}function n(){for(var e,t=0;t<i.length;t++){for(var n=i[t],r=!0,u=1;u<n.length;u++){var s=n[u];0!==o[s]&&(r=!1)}r&&(i.splice(t--,1),e=a(a.s=n[0]))}return e}var r={},o={0:0},i=[];function a(t){if(r[t])return r[t].exports;var n=r[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,a),n.l=!0,n.exports}a.m=e,a.c=r,a.d=function(e,t,n){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,t){if(1&t&&(e=a(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(a.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)a.d(n,r,function(t){return e[t]}.bind(null,r));return n},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="";var u=this.webpackJsonp=this.webpackJsonp||[],s=u.push.bind(u);u.push=t,u=u.slice();for(var c=0;c<u.length;c++)t(u[c]);var l=s;i.push([0,1]),n()}([function(e,t,n){e.exports=n(7)},,,,,function(e,t,n){},,function(e,t,n){"use strict";n.r(t);n(1),n(4),n(5);function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function i(e){return(i=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function a(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function u(e,t){return(u=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var s,c=function(e){function t(e,n){var o,u,s;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),u=this,o=!(s=i(t).call(this,e))||"object"!==r(s)&&"function"!=typeof s?a(u):s,function(e,t,n){t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n}(a(o),"game",void 0),o}var n,s,c;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&u(e,t)}(t,Phaser.Scene),n=t,(s=[{key:"preload",value:function(){}},{key:"setTimerEvent",value:function(e,t,n,r){return this.time.delayedCall(Phaser.Math.Between(e,t),n,r||[],this)}}])&&o(n.prototype,s),c&&o(n,c),t}();function l(e){return(l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function f(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function d(e){return(d=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function p(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function h(e,t){return(h=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function y(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}!function(e){e[e.GRAY=7829367]="GRAY",e[e.UI_BLUE=7829503]="UI_BLUE",e[e.WHITE=16777215]="WHITE",e[e.YELLOW_TEXT=16777113]="YELLOW_TEXT",e[e.BLACK=0]="BLACK",e[e.RED=16711680]="RED",e[e.BUTTON_GREEN=6750054]="BUTTON_GREEN",e[e.BUTTON_ORANGE=10057472]="BUTTON_ORANGE",e[e.BUTTON_YELLOW=16777062]="BUTTON_YELLOW",e[e.BUTTON_RED=16724787]="BUTTON_RED",e[e.BACKGROUND=3355443]="BACKGROUND",e[e.CARD_COLOR=13421823]="CARD_COLOR"}(s||(s={}));var b=function(e){function t(e,n,r,o){var i,a,u;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),a=this,i=!(u=d(t).call(this,e,n,r,"cardback"))||"object"!==l(u)&&"function"!=typeof u?p(a):u,y(p(i),"rt",void 0),y(p(i),"faceUp",void 0),y(p(i),"card",void 0),i.card=o,i.faceUp=!1,i.createTexture(),i.scene.add.existing(p(i)),i}var n,r,o;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&h(e,t)}(t,Phaser.GameObjects.Sprite),n=t,(r=[{key:"flipCard",value:function(e){return this.faceUp=e,this.setTexture(e?this.card.textureKey:"cardback"),this}},{key:"discard",value:function(){this.destroy()}},{key:"createTexture",value:function(){this.rt=this.scene.add.renderTexture(-100,-10,48,64);var e=this.scene.add.graphics().fillStyle(s.CARD_COLOR,1).lineStyle(2,s.WHITE,1).fillRoundedRect(0,0,48,64,3).strokeRoundedRect(0,0,48,64,3);if(this.card.isJoker){var t=this.scene.add.image(16,20,"joker"),n=this.scene.add.bitmapText(24,52,"arcade","joker",8).setTint(s.UI_BLUE).setOrigin(.5);this.rt.draw([e,t,n]),t.destroy(),n.destroy()}else{var r=this.scene.add.image(4,15,"suits8",this.card.suit).setOrigin(0),o=this.scene.add.image(45,50,"suits8",this.card.suit).setOrigin(0).setRotation(Phaser.Math.DegToRad(180)),i=this.scene.add.bitmapText(4,3,"arcade",this.card.rank.symbol,8).setOrigin(0).setTint(this.card.isBlack?s.BLACK:s.RED),a=this.scene.add.bitmapText(45,61,"arcade",this.card.rank.symbol,8).setOrigin(0).setRotation(Phaser.Math.DegToRad(180)).setTint(this.card.isBlack?s.BLACK:s.RED);this.rt.draw([e,r,o,i,a]),i.destroy(),a.destroy(),o.destroy(),r.destroy()}e.destroy(),this.rt.saveTexture(this.card.textureKey)}}])&&f(n.prototype,r),o&&f(n,o),t}();function m(e){return(m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function v(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function g(e){return(g=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function O(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function w(e,t){return(w=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var k=function(e){function t(e,n){var r,o,i;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),o=this,r=!(i=g(t).call(this,"BootScene"))||"object"!==m(i)&&"function"!=typeof i?O(o):i,function(e,t,n){t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n}(O(r),"rt",void 0),r}var n,r,o;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&w(e,t)}(t,c),n=t,(r=[{key:"preload",value:function(){this.load.atlas("suits","assets/suits.png","assets/suits.json"),this.load.atlas("suits8","assets/suits-8.png","assets/suits-8.json"),this.load.image("cardback-graphic","assets/cardback.png"),this.load.image("joker","assets/joker.png"),this.load.bitmapFont("arcade","assets/fonts/arcade.png","assets/fonts/arcade.xml")}},{key:"create",value:function(){console.info("BootScene - create()"),this.createTexture(),this.scene.start("GameScene",{})}},{key:"createTexture",value:function(){this.rt=this.add.renderTexture(-100,-10,48,64);var e=this.add.graphics().fillStyle(s.CARD_COLOR,1).lineStyle(2,s.WHITE,1).fillRoundedRect(0,0,48,64,2).strokeRoundedRect(0,0,48,64,2),t=this.add.image(24,32,"cardback-graphic").setOrigin(.5).setScale(2);this.rt.draw(e).draw(t).saveTexture("cardback"),t.destroy(),e.destroy()}}])&&v(n.prototype,r),o&&v(n,o),t}(),S={type:Phaser.AUTO,scale:{parent:"game-container",mode:Phaser.Scale.FIT,autoCenter:Phaser.Scale.CENTER_BOTH,width:320,height:200},render:{pixelArt:!0,roundPixels:!0},physics:{default:"arcade",arcade:{gravity:{y:0},debug:!0}},plugins:{global:[]}},_={bets:[.2,.4,.6,.8,1],jokers:1,hands:[{key:"fiveOfAKind",multiplier:100,name:"5 of a Kind"},{key:"royalFlush",multiplier:100,name:"Royal Flush"},{key:"straightFlush",multiplier:50,name:"Straight Flush"},{key:"fourOfAKind",multiplier:30,name:"4 of a Kind"},{key:"fullHouse",multiplier:13,name:"Full House"},{key:"flush",multiplier:7,name:"Flush"},{key:"straight",multiplier:6,name:"Straight"},{key:"threeOfAKind",multiplier:3,name:"3 of a Kind"},{key:"twoPair",multiplier:1,name:"Two Pair"}]};function T(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function j(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var E=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),j(this,"textureKey",void 0),j(this,"suit",void 0),j(this,"rank",void 0),this.suit=t,this.rank=n,this.textureKey="card_".concat(t,"_").concat(n.symbol)}var t,n,r;return t=e,(n=[{key:"toString",value:function(){return"[Card ".concat(this.rank.symbol," of ").concat(this.suit,"]")}},{key:"isJoker",get:function(){return"joker"===this.suit}},{key:"isBlack",get:function(){return this.isJoker||"club"===this.suit||"spade"===this.suit}},{key:"isBig",get:function(){return this.isJoker||this.rank.value>7&&this.rank.value<14}},{key:"isSmall",get:function(){return this.isJoker||this.rank.value>0&&this.rank.value<7}}])&&T(t.prototype,n),r&&T(t,r),e}(),P=[{value:1,symbol:"A"},{value:2,symbol:"2"},{value:3,symbol:"3"},{value:4,symbol:"4"},{value:5,symbol:"5"},{value:6,symbol:"6"},{value:7,symbol:"7"},{value:8,symbol:"8"},{value:9,symbol:"9"},{value:10,symbol:"10"},{value:11,symbol:"J"},{value:12,symbol:"Q"},{value:13,symbol:"K"}];function x(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function R(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var C=function(){function e(){var t=this,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),R(this,"cards",[]),R(this,"rt",void 0),R(this,"usedCards",[]),R(this,"lastDrawnIndex",0);for(var r=0;r<n;r++)this.cards.push(new E("joker",{value:99,symbol:"J"}));["club","diamond","heart","spade"].forEach(function(e){var n=!0,r=!1,o=void 0;try{for(var i,a=P[Symbol.iterator]();!(n=(i=a.next()).done);n=!0){var u=i.value;t.cards.push(new E(e,u))}}catch(e){r=!0,o=e}finally{try{n||null==a.return||a.return()}finally{if(r)throw o}}})}var t,n,r;return t=e,(n=[{key:"shuffle",value:function(){for(var e,t,n=this.cards.length;0!==n;)t=Math.floor(Math.random()*n),n-=1,e=this.cards[n],this.cards[n]=this.cards[t],this.cards[t]=e;this.usedCards=[],this.lastDrawnIndex=0}},{key:"draw",value:function(){!(arguments.length>0&&void 0!==arguments[0])||arguments[0];if(this.lastDrawnIndex===this.cards.length)return console.warn("tried to draw too many cards, shuffle the deck"),null;var e=this.cards[this.lastDrawnIndex++];return this.usedCards.push(e),e}},{key:"drawSpecific",value:function(e,t){var n=this.cards.filter(function(n){return t?n.suit===e&&n.rank.value===t:n.suit===e});return n.length?n[0]:null}}])&&x(t.prototype,n),r&&x(t,r),e}();function G(e){return(G="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function B(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function U(e){return(U=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function A(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function L(e,t){return(L=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function K(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var D=function(e){function t(e){var n,r,o;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),r=this,n=!(o=U(t).call(this))||"object"!==G(o)&&"function"!=typeof o?A(r):o,K(A(n),"deck",void 0),K(A(n),"settings",void 0),K(A(n),"gameState",void 0),n.gameState={state:"none",balance:0,bet:.2},n.settings=e,n.deck=new C(n.settings.jokers),n.bindEvents(),n.emit("game:ready"),n}var n,r,o;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&L(e,t)}(t,Phaser.Events.EventEmitter),n=t,(r=[{key:"checkHand",value:function(e){return null}},{key:"dealNewHand",value:function(){this.emit("deal:initial",[]),this.changeState("select")}},{key:"dealChange",value:function(){this.emit("deal:change",[])}},{key:"changeState",value:function(e){var t=this.gameState.state;this.gameState.state=e,this.emit("statechange",e,t)}},{key:"bindEvents",value:function(){}}])&&B(n.prototype,r),o&&B(n,o),t}();function N(e){return(N="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function I(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function M(e){return(M=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function H(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function J(e,t){return(J=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function W(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var Y=function(e){function t(){var e,n,r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),n=this,e=!(r=M(t).call(this,"GameScene"))||"object"!==N(r)&&"function"!=typeof r?H(n):r,W(H(e),"gameSettings",void 0),W(H(e),"pokerGame",void 0),W(H(e),"backgroundGroup",void 0),W(H(e),"winningsGroup",void 0),W(H(e),"uiGroup",void 0),W(H(e),"buttonsGroup",void 0),W(H(e),"cardsGroup",void 0),e}var n,r,o;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&J(e,t)}(t,c),n=t,(r=[{key:"create",value:function(e){console.info("GameScene - create()"),this.gameSettings=_,this.pokerGame=new D(this.gameSettings),this.pokerGame.deck.shuffle(),this.createUI(),this.bindEvents()}},{key:"update",value:function(e,t){}},{key:"bindEvents",value:function(){}},{key:"createUI",value:function(){this.uiGroup=this.add.group(),this.cardsGroup=this.add.group(),this.backgroundGroup=this.add.group(),this.winningsGroup=this.add.group(),this.backgroundGroup.addMultiple([this.add.rectangle(0,0,this.scale.gameSize.width,this.scale.gameSize.height,s.BACKGROUND).setOrigin(0),this.add.rectangle(0,0,this.scale.gameSize.width,22,s.GRAY,1).setOrigin(0),this.add.rectangle(0,this.scale.gameSize.height-14,this.scale.gameSize.width,14,s.GRAY,1).setOrigin(0)]);var e=0,t=!0,n=!1,r=void 0;try{for(var o,i=this.gameSettings.hands[Symbol.iterator]();!(t=(o=i.next()).done);t=!0){var a=o.value;this.winningsGroup.addMultiple([this.add.bitmapText(125,24+9*e,"arcade","".concat(a.name).padEnd(17," "),8),this.add.bitmapText(260,24+9*e,"arcade","".concat(a.multiplier).padStart(3," "),8)]),e++}}catch(e){n=!0,r=e}finally{try{t||null==i.return||i.return()}finally{if(n)throw r}}this.uiGroup.addMultiple([this.add.rectangle(2,2,150,18,s.UI_BLUE).setOrigin(0),this.add.circle(200,6,10,s.BUTTON_YELLOW).setOrigin(0),this.add.bitmapText(5,6,"arcade","money",8),this.add.bitmapText(170,6,"arcade","bet",8),this.add.bitmapText(110,2,"arcade","20",16),this.add.bitmapText(199,2,"arcade","1",16).setTint(s.BLACK)]),this.cardsGroup.addMultiple([new b(this,40,60,new E("heart",{symbol:"2",value:2})),new b(this,45,68,new E("heart",{symbol:"2",value:2})),new b(this,55,55,new E("heart",{symbol:"2",value:2})),new b(this,55,145,this.pokerGame.deck.draw()).flipCard(!0),new b(this,110,145,this.pokerGame.deck.draw()).flipCard(!0),new b(this,165,145,this.pokerGame.deck.draw()).flipCard(!0),new b(this,220,145,this.pokerGame.deck.draw()).flipCard(!0),new b(this,275,145,this.pokerGame.deck.draw()).flipCard(!0)])}}])&&I(n.prototype,r),o&&I(n,o),t}();function F(e){return(F="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function z(e){return(z=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function X(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function Q(e,t){return(Q=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}n.d(t,"KokoGame",function(){return q});var q=function(e){function t(e){var n,r,o,i,a,u;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),r=this,n=!(o=z(t).call(this,e))||"object"!==F(o)&&"function"!=typeof o?X(r):o,i=X(n),u=!1,(a="debug")in i?Object.defineProperty(i,a,{value:u,enumerable:!0,configurable:!0,writable:!0}):i[a]=u,n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Q(e,t)}(t,Phaser.Game),t}();window.onload=function(){var e=new q(S);if("production"!==window.env.buildType){var t=new(n(6));t.setMode(0),t.domElement.style.position="absolute",t.domElement.style.left="0px",t.domElement.style.top="0px",document.body.appendChild(t.domElement),e.events.on("prestep",function(){return t.begin()}),e.events.on("postrender",function(){return t.end()})}e.scene.add("BootScene",k,!0),e.scene.add("GameScene",Y,!1,_)}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,